1. Архитектура. Не стала отделять вью от контроллера, так как проект маленький.

2. Обработка ошибок. Так как, опять же, проект небольшой - то обработка ошибок «на минималках». Можно логировать,
   можно показывать алерты и т.п.  Ошибки отлавливаются, но в большинстве случаев не обрабатываются.

3. Сеть. Так как выбранный апи не предполагает пагинации - то обновляю данные, просто дублируя один и тот же массив.  Можно
   оптимизировать, переиспульзуя одни и те же модели. Например, написать связанный список и просто увеличивать количество элементов.
   Были и другие варианты.

4. Кеширование. Написала очень простое кеширование. Возможны проблемы обновления кеша по дате (если картинка по юрле изменится на
   сервере, так же никак не администрируется бесконечно растущий массив с картинками (можно упасть по памяти), так же можно уменьшить
   размер самих картинок на входе (так как приходят они большими))

5. UI. Выбрала коллекшн вью, так как это более масштабируемое решение. Хотя на данном этапе и для данной задачи достаточно таблицы.
